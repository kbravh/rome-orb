description: >
  Runs rome check command. https://romefrontend.dev/#rome-check
parameters:
  app-dir:
    type: string
    default: .
    description: >
      Path to the directory containing your package.json file. Not needed if
      package.json lives in the root.
  pkg-manager:
    type: enum
    enum: ["npm", "yarn"]
    default: "npm"
    description: >
      The package manager to use to install the project dependencies.
  skip-install:
    type: boolean
    default: false
    description: >
      This will skip the step for installing dependencies.
  paths:
    type: string
    default: ''
    description: >
      The files or directories to check, if you don't want to check the entire project.
  options:
    type: string
    default: ""
    description: >
      Other options to pass to the Rome check command. https://romefrontend.dev/#global-flags
steps:
  - checkout
  - unless:
      condition: << parameters.skip-install >>
      steps:
        - node/install-packages:
            pkg-manager: << parameters.pkg-manager >>
            app-dir: << parameters.app-dir >>
  - run:
      name: Set pipefail
      command: set -o pipefail
  - run:
      working_directory: << parameters.app-dir >>
      # We have to pass the rome command to cat for output to be displayed correctly,
      # as Rome does some pretty printing that doesn't work in our pipeline.
      # The previous pipefail command ensures our exit code passes through.
      command: npx rome check << parameters.paths >> << parameters.options >> | cat
